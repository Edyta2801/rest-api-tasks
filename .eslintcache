[{"C:\\Users\\Lenovo\\Desktop\\Workspace\\rest-api-tasks\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\Workspace\\rest-api-tasks\\src\\App.js":"2","C:\\Users\\Lenovo\\Desktop\\Workspace\\rest-api-tasks\\src\\components\\UsersList.js":"3","C:\\Users\\Lenovo\\Desktop\\Workspace\\rest-api-tasks\\src\\AppUsingAxios.js":"4","C:\\Users\\Lenovo\\Desktop\\Workspace\\rest-api-tasks\\src\\components\\UserDetail.js":"5"},{"size":298,"mtime":1609852505632,"results":"6","hashOfConfig":"7"},{"size":704,"mtime":1609952923659,"results":"8","hashOfConfig":"7"},{"size":2527,"mtime":1609949573242,"results":"9","hashOfConfig":"7"},{"size":2115,"mtime":1609851908728,"results":"10","hashOfConfig":"7"},{"size":1482,"mtime":1609925536204,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n7tycr",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"19"},"C:\\Users\\Lenovo\\Desktop\\Workspace\\rest-api-tasks\\src\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Workspace\\rest-api-tasks\\src\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\Workspace\\rest-api-tasks\\src\\components\\UsersList.js",["25"],"import React, { useState, useEffect } from 'react';\r\nimport \"../App.css\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n// import Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: '258px',\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginLeft: '10px',\r\n\r\n    },\r\n    link: {\r\n        all: 'unset',\r\n\r\n    },\r\n    button: {\r\n        '&:hover': {\r\n            backgroundColor: '#e7e7ec',\r\n        }\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction UsersList() {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [hasError, setError] = useState(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        fetch('https://randomuser.me/api/?results=10')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n\r\n                setUsers(data.results);\r\n                setLoading(false);\r\n                console.log(data.results);\r\n            })\r\n            .catch((error) => setError(true));\r\n    }, []);\r\n\r\n    console.log(users);\r\n\r\n\r\n    return (\r\n        <div className='Users'>\r\n            <List className={classes.root}>\r\n                {isLoading && <p>Loading...</p>}\r\n                {hasError && <p>An error has occurred</p>}\r\n                {users.map(user => (\r\n                    <ListItem alignItems=\"flex-start\" key={user.login.uuid} button className={classes.button}>\r\n                        <ListItemAvatar>\r\n                            <Avatar alt=\"\" src={user.picture.thumbnail} />\r\n                        </ListItemAvatar>\r\n                        <Link to={`/users/${user.login.uuid}`} className={classes.link} >\r\n                            <ListItemText\r\n                                primary={`${user.name.first} ${user.name.last}`}\r\n                                secondary={user.location.country} /></Link>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider variant=\"inset\" />\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default UsersList;",["26","27"],"C:\\Users\\Lenovo\\Desktop\\Workspace\\rest-api-tasks\\src\\AppUsingAxios.js",[],"C:\\Users\\Lenovo\\Desktop\\Workspace\\rest-api-tasks\\src\\components\\UserDetail.js",["28","29","30","31","32","33","34","35","36"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n// import Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: '36ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginLeft:'30px',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction UserDetail() {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [hasError, setError] = useState(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        fetch('https://randomuser.me/api/?results=10')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n\r\n                setUsers(data.results);\r\n                setLoading(false);\r\n                console.log(data.results);\r\n            })\r\n            .catch((error) => setError(true));\r\n    }, []);\r\n\r\n    console.log(users);\r\n\r\n    return (\r\n        <div className='User'>\r\n           Hello !!!\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default UserDetail;",{"ruleId":"37","severity":1,"message":"38","line":3,"column":27,"nodeType":"39","messageId":"40","endLine":3,"endColumn":33},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"37","severity":1,"message":"45","line":4,"column":8,"nodeType":"39","messageId":"40","endLine":4,"endColumn":12},{"ruleId":"37","severity":1,"message":"46","line":5,"column":8,"nodeType":"39","messageId":"40","endLine":5,"endColumn":16},{"ruleId":"37","severity":1,"message":"47","line":6,"column":8,"nodeType":"39","messageId":"40","endLine":6,"endColumn":15},{"ruleId":"37","severity":1,"message":"48","line":7,"column":8,"nodeType":"39","messageId":"40","endLine":7,"endColumn":20},{"ruleId":"37","severity":1,"message":"49","line":8,"column":8,"nodeType":"39","messageId":"40","endLine":8,"endColumn":22},{"ruleId":"37","severity":1,"message":"50","line":9,"column":8,"nodeType":"39","messageId":"40","endLine":9,"endColumn":14},{"ruleId":"37","severity":1,"message":"51","line":29,"column":12,"nodeType":"39","messageId":"40","endLine":29,"endColumn":21},{"ruleId":"37","severity":1,"message":"52","line":30,"column":12,"nodeType":"39","messageId":"40","endLine":30,"endColumn":20},{"ruleId":"37","severity":1,"message":"53","line":32,"column":11,"nodeType":"39","messageId":"40","endLine":32,"endColumn":18},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"'List' is defined but never used.","'ListItem' is defined but never used.","'Divider' is defined but never used.","'ListItemText' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'isLoading' is assigned a value but never used.","'hasError' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]